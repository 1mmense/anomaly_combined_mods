--[[
	Modified by Faustle (2018)
]] --
local strong_monster = {
    chimera = true,
    gigant = true,
    boar = true,
}

local knifes = {
    wpn_knife = 0.04,
    wpn_knife2 = 0.04,
    wpn_knife3 = 0.04,
    wpn_knife4 = 0.03,
    wpn_knife5 = 0.03,
    wpn_knife6 = 0.02,
    wpn_knife7 = 0.02,
    wpn_knife8 = 0.02,
    wpn_knife9 = 0.04,
    wpn_axe = 0.04,
    wpn_axe2 = 0.04,
    wpn_axe3 = 0.04,
    wpn_fire_axe = 0.04,
}

local axes = {
    wpn_axe = true,
    wpn_axe2 = true,
    wpn_axe3 = true,
    wpn_fire_axe = true,
}

local weak_knifes = {
    wpn_knife = true,
    wpn_knife2 = true,
}

local default_drain = 0.04
local drain_factor = 0.25
local min_condition = 0.01

-- Get a first item in inventory that matches `knifes` table.
-- Return a table with fields: `knife`, `knife_name`, `knife_drain`.
-- Return `nil` if nothing was found
function get_equipped_knife()
    local result = nil

    if (not db.actor) then
        return result
    end

    for name, drain in pairs(knifes) do
        local obj = db.actor:object(name)

        if obj then
            local obj_name = obj:section()

            if (obj_name) then
                result = {
                    knife = obj,
                    knife_name = obj_name,
                    knife_drain = drain,
                }

                break
            end
        end
    end

    return result
end

-- Check if there is a knife in inventory
function is_equipped()
    return get_equipped_knife() ~= nil
end

-- Get condition for the first detected knife in inventory
function get_condition()
    local result = 0

    local equipped_knife = get_equipped_knife()

    if (equipped_knife and equipped_knife.knife) then
        result = equipped_knife.knife:condition()
    end

    return result
end

-- Check if the given knife is in `weak_knifes` table
function is_weak_knife(knife)
    local result = false

    if (knife and weak_knifes[knife]) then
        result = true
    end

    return result
end

-- Check if given monster can be looted with the first detected knife in inventory
function can_loot(monster_name)
    local result = false

    if (not monster_name or not db.actor) then
        return result
    end

    for strong_monster_name, _ in pairs(strong_monster) do
        if (monster_name:match(strong_monster_name)) then
            local equipped_knife = get_equipped_knife()

            if (equipped_knife and equipped_knife.knife_name) then
                result = not is_weak_knife(equipped_knife.knife_name)
            end

            break
        end
    end

    return result
end

-- Lower condition for the first detected knife in inventory
function degradate()
    local equipped_knife = get_equipped_knife()

    if (equipped_knife
        and equipped_knife.knife
        and equipped_knife.knife_name
    ) then
        local cond = equipped_knife.knife:condition()
        local drain = (equipped_knife.knife_drain or default_drain) * drain_factor

        if (cond > drain) then
            equipped_knife.knife:set_condition(cond - drain)

            cond = equipped_knife.knife:condition()
        else
            equipped_knife.knife:set_condition(min_condition)
        end
    end
end

-- Check if the first detected knife in inventory is an axe
function is_axe()
    local result = false

    local equipped_knife = get_equipped_knife()

    if (equipped_knife and axes[equipped_knife.knife_name]) then
        result = true
    end

    return result
end
